import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-3AV8cCMq.js";const e={},i=t('<h1 id="реалізація-інформаціиного-та-програмного-забезпечення" tabindex="-1"><a class="header-anchor" href="#реалізація-інформаціиного-та-програмного-забезпечення"><span>Реалізація інформаційного та програмного забезпечення</span></a></h1><h2 id="короткии-зміст" tabindex="-1"><a class="header-anchor" href="#короткии-зміст"><span>Короткий зміст</span></a></h2><ul><li><a href="#%D1%80%D0%B5%D0%B0%D0%BB%D1%96%D0%B7%D0%B0%D1%86%D1%96%D1%8F-%D1%96%D0%BD%D1%84%D0%BE%D1%80%D0%BC%D0%B0%D1%86%D1%96%D0%B9%D0%BD%D0%BE%D0%B3%D0%BE-%D1%82%D0%B0-%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BD%D0%BE%D0%B3%D0%BE-%D0%B7%D0%B0%D0%B1%D0%B5%D0%B7%D0%BF%D0%B5%D1%87%D0%B5%D0%BD%D0%BD%D1%8F">Реалізація інформаційного та програмного забезпечення</a><ul><li><a href="#sql-%D1%81%D0%BA%D1%80%D0%B8%D0%BF%D1%82-%D0%B4%D0%BB%D1%8F-%D1%81%D1%82%D0%B2%D0%BE%D1%80%D0%B5%D0%BD%D0%BD%D1%8F-%D1%82%D0%B0-%D0%BF%D0%BE%D1%87%D0%B0%D1%82%D0%BA%D0%BE%D0%B2%D0%BE%D0%B3%D0%BE-%D0%BD%D0%B0%D0%BF%D0%BE%D0%B2%D0%BD%D0%B5%D0%BD%D0%BD%D1%8F-%D0%B1%D0%B0%D0%B7%D0%B8-%D0%B4%D0%B0%D0%BD%D0%B8%D1%85">SQL-скрипт для створення та початкового наповнення бази даних</a></li><li><a href="#restful-%D1%81%D0%B5%D1%80%D0%B2%D1%96%D1%81-%D0%B4%D0%BB%D1%8F-%D1%83%D0%BF%D1%80%D0%B0%D0%B2%D0%BB%D1%96%D0%BD%D0%BD%D1%8F-%D0%B4%D0%B0%D0%BD%D0%B8%D0%BC%D0%B8">RESTful сервіс для управління даними</a></li></ul></li></ul><h2 id="sql-скрипт-для-створення-та-початкового-наповнення-бази-даних" tabindex="-1"><a class="header-anchor" href="#sql-скрипт-для-створення-та-початкового-наповнення-бази-даних"><span>SQL-скрипт для створення та початкового наповнення бази даних</span></a></h2><div class="language-SQL line-numbers-mode" data-ext="SQL" data-title="SQL"><pre class="language-SQL"><code>-- MySQL Workbench Forward Engineering\n\nSET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;\nSET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;\nSET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE=&#39;ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION&#39;;\n\n-- -----------------------------------------------------\n-- Schema mydb\n-- -----------------------------------------------------\n\n-- -----------------------------------------------------\n-- Schema mydb\n-- -----------------------------------------------------\nCREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;\nUSE `mydb` ;\n\n-- -----------------------------------------------------\n-- Table `mydb`.`Role`\n-- -----------------------------------------------------\nCREATE TABLE IF NOT EXISTS `mydb`.`Role` (\n  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,\n  `name` VARCHAR(45) NOT NULL,\n  `description` VARCHAR(255) NOT NULL,\n  PRIMARY KEY (`id`),\n  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `mydb`.`User`\n-- -----------------------------------------------------\nCREATE TABLE IF NOT EXISTS `mydb`.`User` (\n  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,\n  `name` VARCHAR(45) NOT NULL,\n  `password` VARCHAR(255) NOT NULL,\n  `email` VARCHAR(45) NOT NULL,\n  `account_creation_date` DATETIME NOT NULL,\n  `last_login_date` DATETIME NULL,\n  `Role_id` INT UNSIGNED NOT NULL,\n  PRIMARY KEY (`id`, `Role_id`),\n  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,\n  INDEX `fk_User_Role_idx` (`Role_id` ASC) VISIBLE,\n  CONSTRAINT `fk_User_Role`\n    FOREIGN KEY (`Role_id`)\n    REFERENCES `mydb`.`Role` (`id`)\n    ON DELETE NO ACTION\n    ON UPDATE CASCADE)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `mydb`.`Category`\n-- -----------------------------------------------------\nCREATE TABLE IF NOT EXISTS `mydb`.`Category` (\n  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,\n  `name` VARCHAR(45) NOT NULL,\n  `description` VARCHAR(255) NULL,\n  PRIMARY KEY (`id`))\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `mydb`.`Data`\n-- -----------------------------------------------------\nCREATE TABLE IF NOT EXISTS `mydb`.`Data` (\n  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,\n  `name` VARCHAR(45) NOT NULL,\n  `content` VARCHAR(255) NOT NULL,\n  `upload_date` DATETIME NOT NULL,\n  `last_edit_date` DATETIME NULL,\n  `Category_id` INT UNSIGNED NOT NULL,\n  PRIMARY KEY (`id`, `Category_id`),\n  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,\n  INDEX `fk_Data_Category1_idx` (`Category_id` ASC) VISIBLE,\n  CONSTRAINT `fk_Data_Category1`\n    FOREIGN KEY (`Category_id`)\n    REFERENCES `mydb`.`Category` (`id`)\n    ON DELETE NO ACTION\n    ON UPDATE CASCADE)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `mydb`.`Comment`\n-- -----------------------------------------------------\nCREATE TABLE IF NOT EXISTS `mydb`.`Comment` (\n  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,\n  `content` VARCHAR(255) NOT NULL,\n  `creation_date` DATETIME NOT NULL,\n  `User_id` INT UNSIGNED NOT NULL,\n  `Data_id` INT UNSIGNED NOT NULL,\n  PRIMARY KEY (`id`),\n  INDEX `fk_Comment_User1_idx` (`User_id` ASC) VISIBLE,\n  INDEX `fk_Comment_Data1_idx` (`Data_id` ASC) VISIBLE,\n  CONSTRAINT `fk_Comment_User1`\n    FOREIGN KEY (`User_id`)\n    REFERENCES `mydb`.`User` (`id`)\n    ON DELETE CASCADE\n    ON UPDATE CASCADE,\n  CONSTRAINT `fk_Comment_Data1`\n    FOREIGN KEY (`Data_id`)\n    REFERENCES `mydb`.`Data` (`id`)\n    ON DELETE CASCADE\n    ON UPDATE CASCADE)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `mydb`.`Permission`\n-- -----------------------------------------------------\nCREATE TABLE IF NOT EXISTS `mydb`.`Permission` (\n  `id` INT NOT NULL AUTO_INCREMENT,\n  `name` VARCHAR(45) NOT NULL,\n  `description` VARCHAR(255) NULL,\n  `Role_id` INT UNSIGNED NOT NULL,\n  PRIMARY KEY (`id`, `Role_id`),\n  INDEX `fk_Permission_Role1_idx` (`Role_id` ASC) VISIBLE,\n  CONSTRAINT `fk_Permission_Role1`\n    FOREIGN KEY (`Role_id`)\n    REFERENCES `mydb`.`Role` (`id`)\n    ON DELETE CASCADE\n    ON UPDATE CASCADE)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `mydb`.`Session`\n-- -----------------------------------------------------\nCREATE TABLE IF NOT EXISTS `mydb`.`Session` (\n  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,\n  `login_time` DATETIME NOT NULL,\n  `logout_time` DATETIME NOT NULL,\n  `User_id` INT UNSIGNED NOT NULL,\n  PRIMARY KEY (`id`, `User_id`),\n  INDEX `fk_Session_User1_idx` (`User_id` ASC) VISIBLE,\n  CONSTRAINT `fk_Session_User1`\n    FOREIGN KEY (`User_id`)\n    REFERENCES `mydb`.`User` (`id`)\n    ON DELETE CASCADE\n    ON UPDATE CASCADE)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `mydb`.`Log`\n-- -----------------------------------------------------\nCREATE TABLE IF NOT EXISTS `mydb`.`Log` (\n  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,\n  `action_type` VARCHAR(45) NOT NULL,\n  `action_date` DATETIME NOT NULL,\n  `User_id` INT UNSIGNED NOT NULL,\n  `Data_id` INT UNSIGNED NOT NULL,\n  PRIMARY KEY (`id`),\n  INDEX `fk_Log_User1_idx` (`User_id` ASC) VISIBLE,\n  INDEX `fk_Log_Data1_idx` (`Data_id` ASC) VISIBLE,\n  CONSTRAINT `fk_Log_User1`\n    FOREIGN KEY (`User_id`)\n    REFERENCES `mydb`.`User` (`id`)\n    ON DELETE CASCADE\n    ON UPDATE CASCADE,\n  CONSTRAINT `fk_Log_Data1`\n    FOREIGN KEY (`Data_id`)\n    REFERENCES `mydb`.`Data` (`id`)\n    ON DELETE CASCADE\n    ON UPDATE CASCADE)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `mydb`.`Access`\n-- -----------------------------------------------------\nCREATE TABLE IF NOT EXISTS `mydb`.`Access` (\n  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,\n  `access_type` VARCHAR(45) NOT NULL,\n  `User_id` INT UNSIGNED NOT NULL,\n  `Data_id` INT UNSIGNED NOT NULL,\n  PRIMARY KEY (`id`),\n  INDEX `fk_Access_User1_idx` (`User_id` ASC) VISIBLE,\n  INDEX `fk_Access_Data1_idx` (`Data_id` ASC) VISIBLE,\n  CONSTRAINT `fk_Access_User1`\n    FOREIGN KEY (`User_id`)\n    REFERENCES `mydb`.`User` (`id`)\n    ON DELETE CASCADE\n    ON UPDATE CASCADE,\n  CONSTRAINT `fk_Access_Data1`\n    FOREIGN KEY (`Data_id`)\n    REFERENCES `mydb`.`Data` (`id`)\n    ON DELETE CASCADE\n    ON UPDATE CASCADE)\nENGINE = InnoDB;\n\n\nSET SQL_MODE=@OLD_SQL_MODE;\nSET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;\nSET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;\n\n-- -----------------------------------------------------\n-- Data for table `mydb`.`Role`\n-- -----------------------------------------------------\nSTART TRANSACTION;\nUSE `mydb`;\nINSERT INTO `mydb`.`Role` (`id`, `name`, `description`) VALUES (1, &#39;admin&#39;, &#39;responsible for managing and publishing data, can import new data, organize it into sets, add metadata, and publish it for other users to access&#39;);\nINSERT INTO `mydb`.`Role` (`id`, `name`, `description`) VALUES (2, &#39;user&#39;, &#39;creates tools and APIs to integrate data with the system, develops and tests modules for working with data and ensure compatibility with other services&#39;);\n\nCOMMIT;\n\n\n-- -----------------------------------------------------\n-- Data for table `mydb`.`User`\n-- -----------------------------------------------------\nSTART TRANSACTION;\nUSE `mydb`;\nINSERT INTO `mydb`.`User` (`id`, `name`, `password`, `email`, `account_creation_date`, `last_login_date`, `Role_id`) VALUES (1, &#39;Dmytro_Kulyk&#39;, &#39;abcdefgh&#39;, &#39;kulyk.dmytro@lll.kpi.ua&#39;, &#39;2024-10-17 12:28:24&#39;, &#39;2024-11-03 10:07:42&#39;, 1);\nINSERT INTO `mydb`.`User` (`id`, `name`, `password`, `email`, `account_creation_date`, `last_login_date`, `Role_id`) VALUES (2, &#39;Yulianna_Vakhnina&#39;, &#39;abcdefghij&#39;, &#39;vakhnina.yulianna@lll.kpi.ua&#39;, &#39;2024-10-27 13:42:21&#39;, &#39;2024-11-03 10:11:42&#39;, 1);\nINSERT INTO `mydb`.`User` (`id`, `name`, `password`, `email`, `account_creation_date`, `last_login_date`, `Role_id`) VALUES (3, &#39;Artem_Balabas&#39;, &#39;12345678&#39;, &#39;balabas.artem@lll.kpi.ua&#39;, &#39;2024-11-01 11:28:55&#39;, &#39;2024-11-03 09:11:42&#39;, 2);\nINSERT INTO `mydb`.`User` (`id`, `name`, `password`, `email`, `account_creation_date`, `last_login_date`, `Role_id`) VALUES (4, &#39;Lev_Bereza&#39;, &#39;87654321&#39;, &#39;bereza.lev@lll.kpi.ua&#39;, &#39;2024-11-01 13:15:37&#39;, NULL, 2);\nINSERT INTO `mydb`.`User` (`id`, `name`, `password`, `email`, `account_creation_date`, `last_login_date`, `Role_id`) VALUES (5, &#39;Yaroslav_Kantur&#39;, &#39;546846sd&#39;, &#39;kantur.yaroslav@lll.kpi.ua&#39;, &#39;2024-10-28 15:53:12&#39;, NULL, 2);\nINSERT INTO `mydb`.`User` (`id`, `name`, `password`, `email`, `account_creation_date`, `last_login_date`, `Role_id`) VALUES (6, &#39;Danylo_Pistriuha&#39;, &#39;09876543&#39;, &#39;pistriuha.danylo@lll.kpi.ua&#39;, &#39;2024-11-01 12:33:28&#39;, &#39;2024-11-02 14:15:11&#39;, 2);\nINSERT INTO `mydb`.`User` (`id`, `name`, `password`, `email`, `account_creation_date`, `last_login_date`, `Role_id`) VALUES (7, &#39;Volodymyr_Shkarban&#39;, &#39;34567890&#39;, &#39;shkarban.volodymyr@lll.kpi.ua&#39;, &#39;2024-11-01 18:45:01&#39;, NULL, 2);\n\nCOMMIT;\n\n\n-- -----------------------------------------------------\n-- Data for table `mydb`.`Category`\n-- -----------------------------------------------------\nSTART TRANSACTION;\nUSE `mydb`;\nINSERT INTO `mydb`.`Category` (`id`, `name`, `description`) VALUES (1, &#39;Science&#39;, &#39;Information related to science&#39;);\nINSERT INTO `mydb`.`Category` (`id`, `name`, `description`) VALUES (2, &#39;Technology&#39;, &#39;Technological and societal data&#39;);\nINSERT INTO `mydb`.`Category` (`id`, `name`, `description`) VALUES (3, &#39;Environment&#39;, &#39;Environmental and health studies&#39;);\n\nCOMMIT;\n\n\n-- -----------------------------------------------------\n-- Data for table `mydb`.`Data`\n-- -----------------------------------------------------\nSTART TRANSACTION;\nUSE `mydb`;\nINSERT INTO `mydb`.`Data` (`id`, `name`, `content`, `upload_date`, `last_edit_date`, `Category_id`) VALUES (1, &#39;Climate Change Impact&#39;, &#39;Global warming data 1990-2020&#39;, &#39;2023-02-26 10:26:54&#39;, &#39;2023-03-12 12:24:28&#39;, 3);\nINSERT INTO `mydb`.`Data` (`id`, `name`, `content`, `upload_date`, `last_edit_date`, `Category_id`) VALUES (2, &#39;Population by Country 2023&#39;, &#39;Population numbers by country&#39;, &#39;2023-05-12 19:15:12&#39;, NULL, 1);\nINSERT INTO `mydb`.`Data` (`id`, `name`, `content`, `upload_date`, `last_edit_date`, `Category_id`) VALUES (3, &#39;COVID-19 Vaccination Statistics&#39;, &#39;Vaccination data from 2020 onwards&#39;, &#39;2023-11-30 16:17:29&#39;, &#39;2024-10-16 17:30:56&#39;, 3);\nINSERT INTO `mydb`.`Data` (`id`, `name`, `content`, `upload_date`, `last_edit_date`, `Category_id`) VALUES (4, &#39;Renewable Energy Usage 2022&#39;, &#39;Energy data by source, 2022&#39;, &#39;2023-01-12 17:26:17&#39;, NULL, 3);\nINSERT INTO `mydb`.`Data` (`id`, `name`, `content`, `upload_date`, `last_edit_date`, `Category_id`) VALUES (5, &#39;World Education Index 2023&#39;, &#39;Education index for countries worldwide&#39;, &#39;2024-04-08 08:54:54&#39;, NULL, 1);\nINSERT INTO `mydb`.`Data` (`id`, `name`, `content`, `upload_date`, `last_edit_date`, `Category_id`) VALUES (6, &#39;Tech Innovations 2023&#39;, &#39;Key tech breakthroughs of the year&#39;, &#39;2024-03-15 11:49:02&#39;, NULL, 2);\nINSERT INTO `mydb`.`Data` (`id`, `name`, `content`, `upload_date`, `last_edit_date`, `Category_id`) VALUES (7, &#39;Global Health Spending&#39;, &#39;Health expenditure by country&#39;, &#39;2022-08-16 13:23:16&#39;, &#39;2024-06-09 12:17:53&#39;, 3);\nINSERT INTO `mydb`.`Data` (`id`, `name`, `content`, `upload_date`, `last_edit_date`, `Category_id`) VALUES (8, &#39;Employment Rates by Sector&#39;, &#39;Employment data by economic sector&#39;, &#39;2022-12-20 20:28:32&#39;, &#39;2023-01-19 14:01:12&#39;, 1);\nINSERT INTO `mydb`.`Data` (`id`, `name`, `content`, `upload_date`, `last_edit_date`, `Category_id`) VALUES (9, &#39;Cultural Heritage Sites&#39;, &#39;UNESCO heritage sites worldwide&#39;, &#39;2023-05-04 09:41:32&#39;, &#39;2024-08-01 17:23:15&#39;, 1);\nINSERT INTO `mydb`.`Data` (`id`, `name`, `content`, `upload_date`, `last_edit_date`, `Category_id`) VALUES (10, &#39;Food Production Statistics&#39;, &#39;Global food production by type&#39;, &#39;2023-10-26 11:11:11&#39;, &#39;2024-05-07 16:15:45&#39;, 3);\n\nCOMMIT;\n\n\n-- -----------------------------------------------------\n-- Data for table `mydb`.`Comment`\n-- -----------------------------------------------------\nSTART TRANSACTION;\nUSE `mydb`;\nINSERT INTO `mydb`.`Comment` (`id`, `content`, `creation_date`, `User_id`, `Data_id`) VALUES (1, &#39;Details by country would make this more useful&#39;, &#39;2024-11-05 08:32:14&#39;, 2, 1);\nINSERT INTO `mydb`.`Comment` (`id`, `content`, `creation_date`, `User_id`, `Data_id`) VALUES (2, &#39;Good to see updated info! Thanks&#39;, &#39;2024-11-05 14:23:52&#39;, 2, 3);\nINSERT INTO `mydb`.`Comment` (`id`, `content`, `creation_date`, `User_id`, `Data_id`) VALUES (3, &#39;Nice index! More info on remote regions would help&#39;, &#39;2024-11-08 13:32:55&#39;, 5, 5);\nINSERT INTO `mydb`.`Comment` (`id`, `content`, `creation_date`, `User_id`, `Data_id`) VALUES (4, &#39;Perfect for analysis. Add pandemic funding data?&#39;, &#39;2024-11-08 08:18:34&#39;, 7, 7);\nINSERT INTO `mydb`.`Comment` (`id`, `content`, `creation_date`, `User_id`, `Data_id`) VALUES (5, &#39;Thanks for this! More on IT and healthcare would help&#39;, &#39;2024-11-06 09:38:27&#39;, 4, 8);\nINSERT INTO `mydb`.`Comment` (`id`, `content`, `creation_date`, `User_id`, `Data_id`) VALUES (6, &#39;More photos and history of each site would be cool&#39;, &#39;2024-11-07 14:16:32&#39;, 6, 9);\nINSERT INTO `mydb`.`Comment` (`id`, `content`, `creation_date`, `User_id`, `Data_id`) VALUES (7, &#39;Could it include data on organic vs. conventional farming?&#39;, &#39;2024-11-07 13:27:14&#39;, 3, 10);\n\nCOMMIT;\n\n\n-- -----------------------------------------------------\n-- Data for table `mydb`.`Permission`\n-- -----------------------------------------------------\nSTART TRANSACTION;\nUSE `mydb`;\nINSERT INTO `mydb`.`Permission` (`id`, `name`, `description`, `Role_id`) VALUES (1, &#39;read&#39;, &#39;for admin&#39;, 1);\nINSERT INTO `mydb`.`Permission` (`id`, `name`, `description`, `Role_id`) VALUES (2, &#39;edit&#39;, &#39;for admin&#39;, 1);\nINSERT INTO `mydb`.`Permission` (`id`, `name`, `description`, `Role_id`) VALUES (3, &#39;upload&#39;, &#39;for admin&#39;, 1);\nINSERT INTO `mydb`.`Permission` (`id`, `name`, `description`, `Role_id`) VALUES (4, &#39;download&#39;, &#39;for admin&#39;, 1);\nINSERT INTO `mydb`.`Permission` (`id`, `name`, `description`, `Role_id`) VALUES (5, &#39;delete&#39;, &#39;for admin&#39;, 1);\nINSERT INTO `mydb`.`Permission` (`id`, `name`, `description`, `Role_id`) VALUES (6, &#39;read&#39;, &#39;for user&#39;, 2);\nINSERT INTO `mydb`.`Permission` (`id`, `name`, `description`, `Role_id`) VALUES (7, &#39;edit&#39;, &#39;for user&#39;, 2);\nINSERT INTO `mydb`.`Permission` (`id`, `name`, `description`, `Role_id`) VALUES (8, &#39;upload&#39;, &#39;for uses&#39;, 2);\nINSERT INTO `mydb`.`Permission` (`id`, `name`, `description`, `Role_id`) VALUES (9, &#39;download&#39;, &#39;for user&#39;, 2);\n\nCOMMIT;\n\n\n-- -----------------------------------------------------\n-- Data for table `mydb`.`Session`\n-- -----------------------------------------------------\nSTART TRANSACTION;\nUSE `mydb`;\nINSERT INTO `mydb`.`Session` (`id`, `login_time`, `logout_time`, `User_id`) VALUES (1, &#39;2024-11-03 10:07:42&#39;, &#39;2024-11-03 11:12:32&#39;, 1);\nINSERT INTO `mydb`.`Session` (`id`, `login_time`, `logout_time`, `User_id`) VALUES (2, &#39;2024-11-03 10:11:42&#39;, &#39;2024-11-03 11:01:41&#39;, 2);\nINSERT INTO `mydb`.`Session` (`id`, `login_time`, `logout_time`, `User_id`) VALUES (3, &#39;2024-11-03 09:11:42&#39;, &#39;2024-11-03 10:35:13&#39;, 3);\nINSERT INTO `mydb`.`Session` (`id`, `login_time`, `logout_time`, `User_id`) VALUES (4, &#39;2024-11-02 14:15:11&#39;, &#39;2024-11-02 15:17:19&#39;, 6);\n\nCOMMIT;\n\n\n-- -----------------------------------------------------\n-- Data for table `mydb`.`Log`\n-- -----------------------------------------------------\nSTART TRANSACTION;\nUSE `mydb`;\nINSERT INTO `mydb`.`Log` (`id`, `action_type`, `action_date`, `User_id`, `Data_id`) VALUES (1, &#39;upload&#39;, &#39;2023-02-26 10:26:54&#39;, 7, 1);\nINSERT INTO `mydb`.`Log` (`id`, `action_type`, `action_date`, `User_id`, `Data_id`) VALUES (2, &#39;edit&#39;, &#39;2023-03-12 12:24:28&#39;, 7, 1);\nINSERT INTO `mydb`.`Log` (`id`, `action_type`, `action_date`, `User_id`, `Data_id`) VALUES (3, &#39;upload&#39;, &#39;2023-05-12 19:15:12&#39;, 5, 2);\nINSERT INTO `mydb`.`Log` (`id`, `action_type`, `action_date`, `User_id`, `Data_id`) VALUES (4, &#39;upload&#39;, &#39;2023-11-30 16:17:29&#39;, 2, 3);\nINSERT INTO `mydb`.`Log` (`id`, `action_type`, `action_date`, `User_id`, `Data_id`) VALUES (5, &#39;edit&#39;, &#39;2024-10-16 17:30:56&#39;, 6, 3);\nINSERT INTO `mydb`.`Log` (`id`, `action_type`, `action_date`, `User_id`, `Data_id`) VALUES (6, &#39;upload&#39;, &#39;2023-01-12 17:26:17&#39;, 1, 4);\nINSERT INTO `mydb`.`Log` (`id`, `action_type`, `action_date`, `User_id`, `Data_id`) VALUES (7, &#39;upload&#39;, &#39;2024-04-08 08:54:54&#39;, 1, 5);\nINSERT INTO `mydb`.`Log` (`id`, `action_type`, `action_date`, `User_id`, `Data_id`) VALUES (8, &#39;upload&#39;, &#39;2024-03-15 11:49:02&#39;, 3, 6);\nINSERT INTO `mydb`.`Log` (`id`, `action_type`, `action_date`, `User_id`, `Data_id`) VALUES (9, &#39;upload&#39;, &#39;2022-08-16 13:23:16&#39;, 3, 7);\nINSERT INTO `mydb`.`Log` (`id`, `action_type`, `action_date`, `User_id`, `Data_id`) VALUES (10, &#39;edit&#39;, &#39;2024-06-09 12:17:53&#39;, 3, 7);\nINSERT INTO `mydb`.`Log` (`id`, `action_type`, `action_date`, `User_id`, `Data_id`) VALUES (11, &#39;upload&#39;, &#39;2022-12-20 20:28:32&#39;, 4, 8);\nINSERT INTO `mydb`.`Log` (`id`, `action_type`, `action_date`, `User_id`, `Data_id`) VALUES (12, &#39;edit&#39;, &#39;2023-01-19 14:01:12&#39;, 5, 8);\nINSERT INTO `mydb`.`Log` (`id`, `action_type`, `action_date`, `User_id`, `Data_id`) VALUES (13, &#39;upload&#39;, &#39;2023-05-04 09:41:32&#39;, 6, 9);\nINSERT INTO `mydb`.`Log` (`id`, `action_type`, `action_date`, `User_id`, `Data_id`) VALUES (14, &#39;edit&#39;, &#39;2024-08-01 17:23:15&#39;, 6, 9);\nINSERT INTO `mydb`.`Log` (`id`, `action_type`, `action_date`, `User_id`, `Data_id`) VALUES (15, &#39;upload&#39;, &#39;2023-10-26 11:11:11&#39;, 2, 10);\nINSERT INTO `mydb`.`Log` (`id`, `action_type`, `action_date`, `User_id`, `Data_id`) VALUES (16, &#39;edit&#39;, &#39;2024-05-07 16:15:45&#39;, 1, 10);\n\nCOMMIT;\n\n\n-- -----------------------------------------------------\n-- Data for table `mydb`.`Access`\n-- -----------------------------------------------------\nSTART TRANSACTION;\nUSE `mydb`;\nINSERT INTO `mydb`.`Access` (`id`, `access_type`, `User_id`, `Data_id`) VALUES (1, &#39;read&#39;, 1, 3);\nINSERT INTO `mydb`.`Access` (`id`, `access_type`, `User_id`, `Data_id`) VALUES (2, &#39;edit&#39;, 1, 3);\nINSERT INTO `mydb`.`Access` (`id`, `access_type`, `User_id`, `Data_id`) VALUES (3, &#39;delete&#39;, 1, 3);\nINSERT INTO `mydb`.`Access` (`id`, `access_type`, `User_id`, `Data_id`) VALUES (4, &#39;read&#39;, 4, 7);\nINSERT INTO `mydb`.`Access` (`id`, `access_type`, `User_id`, `Data_id`) VALUES (5, &#39;edit&#39;, 4, 7);\nINSERT INTO `mydb`.`Access` (`id`, `access_type`, `User_id`, `Data_id`) VALUES (6, &#39;read&#39;, 5, 4);\nINSERT INTO `mydb`.`Access` (`id`, `access_type`, `User_id`, `Data_id`) VALUES (7, &#39;edit&#39;, 5, 4);\n\nCOMMIT;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="restful-сервіс-для-управління-даними" tabindex="-1"><a class="header-anchor" href="#restful-сервіс-для-управління-даними"><span>RESTful сервіс для управління даними</span></a></h2><p><strong>main.py</strong> (ініціалізує FastAPI та підключає маршрути)</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">from</span> fastapi <span class="token keyword">import</span> FastAPI\n<span class="token keyword">from</span> database <span class="token keyword">import</span> engine<span class="token punctuation">,</span> Base\n<span class="token keyword">from</span> routes <span class="token keyword">import</span> router\n\nBase<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>create_all<span class="token punctuation">(</span>bind<span class="token operator">=</span>engine<span class="token punctuation">)</span>\n\napp <span class="token operator">=</span> FastAPI<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\napp<span class="token punctuation">.</span>include_router<span class="token punctuation">(</span>router<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>database.py</strong> (налаштовує підключення до бази даних і створює об&#39;єкти для роботи з нею)</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">from</span> sqlalchemy <span class="token keyword">import</span> create_engine\n<span class="token keyword">from</span> sqlalchemy<span class="token punctuation">.</span>ext<span class="token punctuation">.</span>declarative <span class="token keyword">import</span> declarative_base\n<span class="token keyword">from</span> sqlalchemy<span class="token punctuation">.</span>orm <span class="token keyword">import</span> sessionmaker\n<span class="token keyword">from</span> config <span class="token keyword">import</span> DB_PASSWORD\n\nSQLALCHEMY_DATABASE_URL <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;mysql+pymysql://root:</span><span class="token interpolation"><span class="token punctuation">{</span>DB_PASSWORD<span class="token punctuation">}</span></span><span class="token string">@127.0.0.1:3306/mydb&quot;</span></span>\n\nengine <span class="token operator">=</span> create_engine<span class="token punctuation">(</span>SQLALCHEMY_DATABASE_URL<span class="token punctuation">)</span>\nSessionLocal <span class="token operator">=</span> sessionmaker<span class="token punctuation">(</span>autocommit<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> autoflush<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> bind<span class="token operator">=</span>engine<span class="token punctuation">)</span>\nBase <span class="token operator">=</span> declarative_base<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>models.py</strong> (визначає ORM-моделі для таблиць Data і Category)</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">from</span> sqlalchemy <span class="token keyword">import</span> Column<span class="token punctuation">,</span> Integer<span class="token punctuation">,</span> String<span class="token punctuation">,</span> DateTime<span class="token punctuation">,</span> ForeignKey\n<span class="token keyword">from</span> sqlalchemy<span class="token punctuation">.</span>orm <span class="token keyword">import</span> relationship\n<span class="token keyword">from</span> database <span class="token keyword">import</span> Base\n<span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetime<span class="token punctuation">,</span> timezone<span class="token punctuation">,</span> timedelta\n\n\n<span class="token keyword">class</span> <span class="token class-name">Data</span><span class="token punctuation">(</span>Base<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    __tablename__ <span class="token operator">=</span> <span class="token string">&#39;Data&#39;</span>\n    <span class="token builtin">id</span> <span class="token operator">=</span> Column<span class="token punctuation">(</span>Integer<span class="token punctuation">,</span> primary_key<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> autoincrement<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>\n    name <span class="token operator">=</span> Column<span class="token punctuation">(</span>String<span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> unique<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>\n    content <span class="token operator">=</span> Column<span class="token punctuation">(</span>String<span class="token punctuation">)</span>\n    upload_date <span class="token operator">=</span> Column<span class="token punctuation">(</span>DateTime<span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token keyword">lambda</span><span class="token punctuation">:</span> datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span>timezone<span class="token punctuation">.</span>utc<span class="token punctuation">)</span> <span class="token operator">+</span> timedelta<span class="token punctuation">(</span>hours<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    last_edit_date <span class="token operator">=</span> Column<span class="token punctuation">(</span>DateTime<span class="token punctuation">,</span> nullable<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>\n    category_id <span class="token operator">=</span> Column<span class="token punctuation">(</span>Integer<span class="token punctuation">,</span> ForeignKey<span class="token punctuation">(</span><span class="token string">&#39;Category.id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n    category <span class="token operator">=</span> relationship<span class="token punctuation">(</span><span class="token string">&quot;Category&quot;</span><span class="token punctuation">,</span> back_populates<span class="token operator">=</span><span class="token string">&quot;data_items&quot;</span><span class="token punctuation">)</span>\n\n\n<span class="token keyword">class</span> <span class="token class-name">Category</span><span class="token punctuation">(</span>Base<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    __tablename__ <span class="token operator">=</span> <span class="token string">&#39;Category&#39;</span>\n    <span class="token builtin">id</span> <span class="token operator">=</span> Column<span class="token punctuation">(</span>Integer<span class="token punctuation">,</span> primary_key<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> autoincrement<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>\n    name <span class="token operator">=</span> Column<span class="token punctuation">(</span>String<span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>\n    description <span class="token operator">=</span> Column<span class="token punctuation">(</span>String<span class="token punctuation">,</span> nullable<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>\n\n    data_items <span class="token operator">=</span> relationship<span class="token punctuation">(</span><span class="token string">&quot;Data&quot;</span><span class="token punctuation">,</span> back_populates<span class="token operator">=</span><span class="token string">&quot;category&quot;</span><span class="token punctuation">)</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>schemas.py</strong> (визначає Pydantic-схеми для валідації даних, які надходять у запитах і відповідях)</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">from</span> pydantic <span class="token keyword">import</span> BaseModel\n<span class="token keyword">from</span> typing <span class="token keyword">import</span> Optional\n<span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetime\n\n\n<span class="token keyword">class</span> <span class="token class-name">DataCreate</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token builtin">id</span><span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span>\n    name<span class="token punctuation">:</span> <span class="token builtin">str</span>\n    content<span class="token punctuation">:</span> <span class="token builtin">str</span>\n    upload_date<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span>datetime<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span>\n    last_edit_date<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span>datetime<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span>\n    category_id<span class="token punctuation">:</span> <span class="token builtin">int</span>\n\n\n<span class="token keyword">class</span> <span class="token class-name">CategoryCreate</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token builtin">id</span><span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span>\n    name<span class="token punctuation">:</span> <span class="token builtin">str</span>\n    description<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span>\n\n\n<span class="token keyword">class</span> <span class="token class-name">DataResponse</span><span class="token punctuation">(</span>DataCreate<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">class</span> <span class="token class-name">Config</span><span class="token punctuation">:</span>\n        orm_mode <span class="token operator">=</span> <span class="token boolean">True</span>\n\n\n<span class="token keyword">class</span> <span class="token class-name">CategoryResponse</span><span class="token punctuation">(</span>CategoryCreate<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">class</span> <span class="token class-name">Config</span><span class="token punctuation">:</span>\n        orm_mode <span class="token operator">=</span> <span class="token boolean">True</span>\n\n\n<span class="token keyword">class</span> <span class="token class-name">CategoryPatch</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token builtin">id</span><span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token boolean">None</span>\n    name<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token boolean">None</span>\n    description<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span>\n\n\n<span class="token keyword">class</span> <span class="token class-name">DataPatch</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token builtin">id</span><span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token boolean">None</span>\n    name<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token boolean">None</span>\n    content<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token boolean">None</span>\n    upload_date<span class="token punctuation">:</span> datetime <span class="token operator">=</span> <span class="token boolean">None</span>\n    last_edit_date<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span>datetime<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span>\n    category_id<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token boolean">None</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>routes.py</strong> (визначає API-ендпоїнти для роботи з даними та категоріями)</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">from</span> fastapi <span class="token keyword">import</span> APIRouter<span class="token punctuation">,</span> Depends<span class="token punctuation">,</span> HTTPException\n<span class="token keyword">from</span> sqlalchemy<span class="token punctuation">.</span>orm <span class="token keyword">import</span> Session\n<span class="token keyword">from</span> typing <span class="token keyword">import</span> List\n<span class="token keyword">from</span> models <span class="token keyword">import</span> Data<span class="token punctuation">,</span> Category\n<span class="token keyword">from</span> schemas <span class="token keyword">import</span> DataCreate<span class="token punctuation">,</span> CategoryCreate<span class="token punctuation">,</span> DataResponse<span class="token punctuation">,</span> CategoryResponse<span class="token punctuation">,</span> CategoryPatch<span class="token punctuation">,</span> DataPatch\n<span class="token keyword">from</span> database <span class="token keyword">import</span> SessionLocal\n\nrouter <span class="token operator">=</span> APIRouter<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n\n<span class="token keyword">def</span> <span class="token function">get_db</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    db <span class="token operator">=</span> SessionLocal<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">try</span><span class="token punctuation">:</span>\n        <span class="token keyword">yield</span> db\n    <span class="token keyword">finally</span><span class="token punctuation">:</span>\n        db<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n\n<span class="token decorator annotation punctuation">@router<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/data/&quot;</span><span class="token punctuation">,</span> response_model<span class="token operator">=</span>List<span class="token punctuation">[</span>DataResponse<span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_data</span><span class="token punctuation">(</span>db<span class="token punctuation">:</span> Session <span class="token operator">=</span> Depends<span class="token punctuation">(</span>get_db<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">return</span> db<span class="token punctuation">.</span>query<span class="token punctuation">(</span>Data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n\n<span class="token decorator annotation punctuation">@router<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/data/{data_id}&quot;</span><span class="token punctuation">,</span> response_model<span class="token operator">=</span>DataResponse<span class="token punctuation">)</span>\n<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_data_by_id</span><span class="token punctuation">(</span>data_id<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> db<span class="token punctuation">:</span> Session <span class="token operator">=</span> Depends<span class="token punctuation">(</span>get_db<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    db_data <span class="token operator">=</span> db<span class="token punctuation">.</span>query<span class="token punctuation">(</span>Data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>data_id <span class="token operator">==</span> Data<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">if</span> db_data <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>\n        <span class="token keyword">raise</span> HTTPException<span class="token punctuation">(</span>status_code<span class="token operator">=</span><span class="token number">404</span><span class="token punctuation">,</span> detail<span class="token operator">=</span><span class="token string">&quot;The data with the specified ID was not found&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">return</span> db_data\n\n\n<span class="token decorator annotation punctuation">@router<span class="token punctuation">.</span>post</span><span class="token punctuation">(</span><span class="token string">&quot;/data/&quot;</span><span class="token punctuation">,</span> response_model<span class="token operator">=</span>DataResponse<span class="token punctuation">)</span>\n<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">create_data</span><span class="token punctuation">(</span>data<span class="token punctuation">:</span> DataCreate<span class="token punctuation">,</span> db<span class="token punctuation">:</span> Session <span class="token operator">=</span> Depends<span class="token punctuation">(</span>get_db<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    id_data <span class="token operator">=</span> db<span class="token punctuation">.</span>query<span class="token punctuation">(</span>Data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token builtin">id</span> <span class="token operator">==</span> Data<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">if</span> id_data<span class="token punctuation">:</span>\n        <span class="token keyword">raise</span> HTTPException<span class="token punctuation">(</span>status_code<span class="token operator">=</span><span class="token number">400</span><span class="token punctuation">,</span> detail<span class="token operator">=</span><span class="token string">&quot;The data with this ID already exists&quot;</span><span class="token punctuation">)</span>\n\n    name_data <span class="token operator">=</span> db<span class="token punctuation">.</span>query<span class="token punctuation">(</span>Data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>name <span class="token operator">==</span> Data<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">if</span> name_data<span class="token punctuation">:</span>\n        <span class="token keyword">raise</span> HTTPException<span class="token punctuation">(</span>status_code<span class="token operator">=</span><span class="token number">400</span><span class="token punctuation">,</span> detail<span class="token operator">=</span><span class="token string">&quot;The data with this name already exists&quot;</span><span class="token punctuation">)</span>\n\n    id_category <span class="token operator">=</span> db<span class="token punctuation">.</span>query<span class="token punctuation">(</span>Category<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>category_id <span class="token operator">==</span> Category<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">if</span> <span class="token keyword">not</span> id_category<span class="token punctuation">:</span>\n        <span class="token keyword">raise</span> HTTPException<span class="token punctuation">(</span>status_code<span class="token operator">=</span><span class="token number">400</span><span class="token punctuation">,</span> detail<span class="token operator">=</span><span class="token string">&quot;The category with the specified ID was not found&quot;</span><span class="token punctuation">)</span>\n\n    db_data <span class="token operator">=</span> Data<span class="token punctuation">(</span><span class="token operator">**</span>data<span class="token punctuation">.</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    db<span class="token punctuation">.</span>add<span class="token punctuation">(</span>db_data<span class="token punctuation">)</span>\n    db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    db<span class="token punctuation">.</span>refresh<span class="token punctuation">(</span>db_data<span class="token punctuation">)</span>\n\n    <span class="token keyword">return</span> db_data\n\n\n<span class="token decorator annotation punctuation">@router<span class="token punctuation">.</span>put</span><span class="token punctuation">(</span><span class="token string">&quot;/data/{data_id}&quot;</span><span class="token punctuation">,</span> response_model<span class="token operator">=</span>DataResponse<span class="token punctuation">)</span>\n<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">update_data</span><span class="token punctuation">(</span>data_id<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> data<span class="token punctuation">:</span> DataCreate<span class="token punctuation">,</span> db<span class="token punctuation">:</span> Session <span class="token operator">=</span> Depends<span class="token punctuation">(</span>get_db<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    db_data <span class="token operator">=</span> db<span class="token punctuation">.</span>query<span class="token punctuation">(</span>Data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>data_id <span class="token operator">==</span> Data<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">if</span> db_data <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>\n        <span class="token keyword">raise</span> HTTPException<span class="token punctuation">(</span>status_code<span class="token operator">=</span><span class="token number">404</span><span class="token punctuation">,</span> detail<span class="token operator">=</span><span class="token string">&quot;The data with the specified ID was not found&quot;</span><span class="token punctuation">)</span>\n\n    id_data <span class="token operator">=</span> db<span class="token punctuation">.</span>query<span class="token punctuation">(</span>Data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token builtin">id</span> <span class="token operator">==</span> Data<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">,</span> data_id <span class="token operator">!=</span> Data<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">if</span> id_data<span class="token punctuation">:</span>\n        <span class="token keyword">raise</span> HTTPException<span class="token punctuation">(</span>status_code<span class="token operator">=</span><span class="token number">400</span><span class="token punctuation">,</span> detail<span class="token operator">=</span><span class="token string">&quot;The data with this ID already exists&quot;</span><span class="token punctuation">)</span>\n\n    name_data <span class="token operator">=</span> db<span class="token punctuation">.</span>query<span class="token punctuation">(</span>Data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>name <span class="token operator">==</span> Data<span class="token punctuation">.</span>name<span class="token punctuation">,</span> data_id <span class="token operator">!=</span> Data<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">if</span> name_data<span class="token punctuation">:</span>\n        <span class="token keyword">raise</span> HTTPException<span class="token punctuation">(</span>status_code<span class="token operator">=</span><span class="token number">400</span><span class="token punctuation">,</span> detail<span class="token operator">=</span><span class="token string">&quot;The data with this name already exists&quot;</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">if</span> data<span class="token punctuation">.</span>category_id<span class="token punctuation">:</span>\n        id_category <span class="token operator">=</span> db<span class="token punctuation">.</span>query<span class="token punctuation">(</span>Category<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>category_id <span class="token operator">==</span> Category<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token keyword">if</span> <span class="token keyword">not</span> id_category<span class="token punctuation">:</span>\n            <span class="token keyword">raise</span> HTTPException<span class="token punctuation">(</span>status_code<span class="token operator">=</span><span class="token number">400</span><span class="token punctuation">,</span> detail<span class="token operator">=</span><span class="token string">&quot;The category with the specified ID was not found&quot;</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">for</span> key<span class="token punctuation">,</span> value <span class="token keyword">in</span> data<span class="token punctuation">.</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n        <span class="token builtin">setattr</span><span class="token punctuation">(</span>db_data<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>\n\n    db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    db<span class="token punctuation">.</span>refresh<span class="token punctuation">(</span>db_data<span class="token punctuation">)</span>\n    <span class="token keyword">return</span> db_data\n\n\n<span class="token decorator annotation punctuation">@router<span class="token punctuation">.</span>delete</span><span class="token punctuation">(</span><span class="token string">&quot;/data/{data_id}&quot;</span><span class="token punctuation">,</span> response_model<span class="token operator">=</span>DataResponse<span class="token punctuation">)</span>\n<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">delete_data</span><span class="token punctuation">(</span>data_id<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> db<span class="token punctuation">:</span> Session <span class="token operator">=</span> Depends<span class="token punctuation">(</span>get_db<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    db_data <span class="token operator">=</span> db<span class="token punctuation">.</span>query<span class="token punctuation">(</span>Data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>data_id <span class="token operator">==</span> Data<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">if</span> db_data <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>\n        <span class="token keyword">raise</span> HTTPException<span class="token punctuation">(</span>status_code<span class="token operator">=</span><span class="token number">404</span><span class="token punctuation">,</span> detail<span class="token operator">=</span><span class="token string">&quot;The data with the specified ID was not found&quot;</span><span class="token punctuation">)</span>\n\n    db<span class="token punctuation">.</span>delete<span class="token punctuation">(</span>db_data<span class="token punctuation">)</span>\n    db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">return</span> db_data\n\n\n<span class="token decorator annotation punctuation">@router<span class="token punctuation">.</span>patch</span><span class="token punctuation">(</span><span class="token string">&quot;/data/{data_id}&quot;</span><span class="token punctuation">,</span> response_model<span class="token operator">=</span>DataResponse<span class="token punctuation">)</span>\n<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">patch_data</span><span class="token punctuation">(</span>data_id<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> data<span class="token punctuation">:</span> DataPatch<span class="token punctuation">,</span> db<span class="token punctuation">:</span> Session <span class="token operator">=</span> Depends<span class="token punctuation">(</span>get_db<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    db_data <span class="token operator">=</span> db<span class="token punctuation">.</span>query<span class="token punctuation">(</span>Data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>data_id <span class="token operator">==</span> Data<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">if</span> db_data <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>\n        <span class="token keyword">raise</span> HTTPException<span class="token punctuation">(</span>status_code<span class="token operator">=</span><span class="token number">404</span><span class="token punctuation">,</span> detail<span class="token operator">=</span><span class="token string">&quot;The data with the specified ID was not found&quot;</span><span class="token punctuation">)</span>\n\n    updated_fields <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token builtin">dict</span><span class="token punctuation">(</span>exclude_unset<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">if</span> <span class="token string">&#39;id&#39;</span> <span class="token keyword">in</span> updated_fields <span class="token keyword">and</span> updated_fields<span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">]</span> <span class="token operator">!=</span> data_id<span class="token punctuation">:</span>\n        id_data <span class="token operator">=</span> db<span class="token punctuation">.</span>query<span class="token punctuation">(</span>Data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>Data<span class="token punctuation">.</span><span class="token builtin">id</span> <span class="token operator">==</span> updated_fields<span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token keyword">if</span> id_data<span class="token punctuation">:</span>\n            <span class="token keyword">raise</span> HTTPException<span class="token punctuation">(</span>status_code<span class="token operator">=</span><span class="token number">400</span><span class="token punctuation">,</span> detail<span class="token operator">=</span><span class="token string">&quot;The data with this ID already exists&quot;</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">if</span> <span class="token string">&#39;name&#39;</span> <span class="token keyword">in</span> updated_fields<span class="token punctuation">:</span>\n        name_data <span class="token operator">=</span> db<span class="token punctuation">.</span>query<span class="token punctuation">(</span>Data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>Data<span class="token punctuation">.</span>name <span class="token operator">==</span> updated_fields<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> data_id <span class="token operator">!=</span> Data<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token keyword">if</span> name_data<span class="token punctuation">:</span>\n            <span class="token keyword">raise</span> HTTPException<span class="token punctuation">(</span>status_code<span class="token operator">=</span><span class="token number">400</span><span class="token punctuation">,</span> detail<span class="token operator">=</span><span class="token string">&quot;The data with this name already exists&quot;</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">if</span> <span class="token string">&#39;category_id&#39;</span> <span class="token keyword">in</span> updated_fields<span class="token punctuation">:</span>\n        category <span class="token operator">=</span> db<span class="token punctuation">.</span>query<span class="token punctuation">(</span>Category<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>Category<span class="token punctuation">.</span><span class="token builtin">id</span> <span class="token operator">==</span> updated_fields<span class="token punctuation">[</span><span class="token string">&#39;category_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token keyword">if</span> <span class="token keyword">not</span> category<span class="token punctuation">:</span>\n            <span class="token keyword">raise</span> HTTPException<span class="token punctuation">(</span>status_code<span class="token operator">=</span><span class="token number">400</span><span class="token punctuation">,</span> detail<span class="token operator">=</span><span class="token string">&quot;The category with the specified ID was not found&quot;</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">for</span> key<span class="token punctuation">,</span> value <span class="token keyword">in</span> updated_fields<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n        <span class="token builtin">setattr</span><span class="token punctuation">(</span>db_data<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>\n\n    db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    db<span class="token punctuation">.</span>refresh<span class="token punctuation">(</span>db_data<span class="token punctuation">)</span>\n    <span class="token keyword">return</span> db_data\n\n\n<span class="token decorator annotation punctuation">@router<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/category/&quot;</span><span class="token punctuation">,</span> response_model<span class="token operator">=</span>List<span class="token punctuation">[</span>CategoryResponse<span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_category</span><span class="token punctuation">(</span>skip<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> limit<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span> db<span class="token punctuation">:</span> Session <span class="token operator">=</span> Depends<span class="token punctuation">(</span>get_db<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">return</span> db<span class="token punctuation">.</span>query<span class="token punctuation">(</span>Category<span class="token punctuation">)</span><span class="token punctuation">.</span>offset<span class="token punctuation">(</span>skip<span class="token punctuation">)</span><span class="token punctuation">.</span>limit<span class="token punctuation">(</span>limit<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n\n<span class="token decorator annotation punctuation">@router<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/category/{category_id}&quot;</span><span class="token punctuation">,</span> response_model<span class="token operator">=</span>CategoryResponse<span class="token punctuation">)</span>\n<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_category_by_id</span><span class="token punctuation">(</span>category_id<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> db<span class="token punctuation">:</span> Session <span class="token operator">=</span> Depends<span class="token punctuation">(</span>get_db<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    db_category <span class="token operator">=</span> db<span class="token punctuation">.</span>query<span class="token punctuation">(</span>Category<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>category_id <span class="token operator">==</span> Category<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">if</span> db_category <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>\n        <span class="token keyword">raise</span> HTTPException<span class="token punctuation">(</span>status_code<span class="token operator">=</span><span class="token number">404</span><span class="token punctuation">,</span> detail<span class="token operator">=</span><span class="token string">&quot;The category with the specified ID was not found&quot;</span><span class="token punctuation">)</span>\n    <span class="token keyword">return</span> db_category\n\n\n<span class="token decorator annotation punctuation">@router<span class="token punctuation">.</span>post</span><span class="token punctuation">(</span><span class="token string">&quot;/category/&quot;</span><span class="token punctuation">,</span> response_model<span class="token operator">=</span>CategoryResponse<span class="token punctuation">)</span>\n<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">create_category</span><span class="token punctuation">(</span>category<span class="token punctuation">:</span> CategoryCreate<span class="token punctuation">,</span> db<span class="token punctuation">:</span> Session <span class="token operator">=</span> Depends<span class="token punctuation">(</span>get_db<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    existing_category <span class="token operator">=</span> db<span class="token punctuation">.</span>query<span class="token punctuation">(</span>Category<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>category<span class="token punctuation">.</span><span class="token builtin">id</span> <span class="token operator">==</span> Category<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">if</span> existing_category<span class="token punctuation">:</span>\n        <span class="token keyword">raise</span> HTTPException<span class="token punctuation">(</span>status_code<span class="token operator">=</span><span class="token number">400</span><span class="token punctuation">,</span> detail<span class="token operator">=</span><span class="token string">&quot;The category with this ID already exists&quot;</span><span class="token punctuation">)</span>\n\n    db_category <span class="token operator">=</span> Category<span class="token punctuation">(</span><span class="token operator">**</span>category<span class="token punctuation">.</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    db<span class="token punctuation">.</span>add<span class="token punctuation">(</span>db_category<span class="token punctuation">)</span>\n    db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    db<span class="token punctuation">.</span>refresh<span class="token punctuation">(</span>db_category<span class="token punctuation">)</span>\n\n    <span class="token keyword">return</span> db_category\n\n\n<span class="token decorator annotation punctuation">@router<span class="token punctuation">.</span>put</span><span class="token punctuation">(</span><span class="token string">&quot;/category/{category_id}&quot;</span><span class="token punctuation">,</span> response_model<span class="token operator">=</span>CategoryResponse<span class="token punctuation">)</span>\n<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">update_category</span><span class="token punctuation">(</span>category_id<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> category<span class="token punctuation">:</span> CategoryCreate<span class="token punctuation">,</span> db<span class="token punctuation">:</span> Session <span class="token operator">=</span> Depends<span class="token punctuation">(</span>get_db<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    db_category <span class="token operator">=</span> db<span class="token punctuation">.</span>query<span class="token punctuation">(</span>Category<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>category_id <span class="token operator">==</span> Category<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">if</span> db_category <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>\n        <span class="token keyword">raise</span> HTTPException<span class="token punctuation">(</span>status_code<span class="token operator">=</span><span class="token number">404</span><span class="token punctuation">,</span> detail<span class="token operator">=</span><span class="token string">&quot;The category with the specified ID was not found&quot;</span><span class="token punctuation">)</span>\n\n    id_data <span class="token operator">=</span> db<span class="token punctuation">.</span>query<span class="token punctuation">(</span>Data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>category<span class="token punctuation">.</span><span class="token builtin">id</span> <span class="token operator">==</span> Category<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">,</span> category_id <span class="token operator">!=</span> Category<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">if</span> id_data<span class="token punctuation">:</span>\n        <span class="token keyword">raise</span> HTTPException<span class="token punctuation">(</span>status_code<span class="token operator">=</span><span class="token number">400</span><span class="token punctuation">,</span> detail<span class="token operator">=</span><span class="token string">&quot;The category with this ID already exists&quot;</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">for</span> key<span class="token punctuation">,</span> value <span class="token keyword">in</span> category<span class="token punctuation">.</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n        <span class="token builtin">setattr</span><span class="token punctuation">(</span>db_category<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>\n\n    db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    db<span class="token punctuation">.</span>refresh<span class="token punctuation">(</span>db_category<span class="token punctuation">)</span>\n    <span class="token keyword">return</span> db_category\n\n\n<span class="token decorator annotation punctuation">@router<span class="token punctuation">.</span>delete</span><span class="token punctuation">(</span><span class="token string">&quot;/category/{category_id}&quot;</span><span class="token punctuation">,</span> response_model<span class="token operator">=</span>CategoryResponse<span class="token punctuation">)</span>\n<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">delete_category</span><span class="token punctuation">(</span>category_id<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> db<span class="token punctuation">:</span> Session <span class="token operator">=</span> Depends<span class="token punctuation">(</span>get_db<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    db_category <span class="token operator">=</span> db<span class="token punctuation">.</span>query<span class="token punctuation">(</span>Category<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>category_id <span class="token operator">==</span> Category<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">if</span> db_category <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>\n        <span class="token keyword">raise</span> HTTPException<span class="token punctuation">(</span>status_code<span class="token operator">=</span><span class="token number">404</span><span class="token punctuation">,</span> detail<span class="token operator">=</span><span class="token string">&quot;The category with the specified ID was not found&quot;</span><span class="token punctuation">)</span>\n\n    related_data <span class="token operator">=</span> db<span class="token punctuation">.</span>query<span class="token punctuation">(</span>Data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>category_id <span class="token operator">==</span> Data<span class="token punctuation">.</span>category_id<span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">if</span> related_data<span class="token punctuation">:</span>\n        <span class="token keyword">raise</span> HTTPException<span class="token punctuation">(</span>status_code<span class="token operator">=</span><span class="token number">403</span><span class="token punctuation">,</span> detail<span class="token operator">=</span><span class="token string">&quot;Cannot delete category with associated data&quot;</span><span class="token punctuation">)</span>\n\n    db<span class="token punctuation">.</span>delete<span class="token punctuation">(</span>db_category<span class="token punctuation">)</span>\n    db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">return</span> db_category\n\n\n<span class="token decorator annotation punctuation">@router<span class="token punctuation">.</span>patch</span><span class="token punctuation">(</span><span class="token string">&quot;/category/{category_id}&quot;</span><span class="token punctuation">,</span> response_model<span class="token operator">=</span>CategoryResponse<span class="token punctuation">)</span>\n<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">patch_category</span><span class="token punctuation">(</span>category_id<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> category<span class="token punctuation">:</span> CategoryPatch<span class="token punctuation">,</span> db<span class="token punctuation">:</span> Session <span class="token operator">=</span> Depends<span class="token punctuation">(</span>get_db<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    db_category <span class="token operator">=</span> db<span class="token punctuation">.</span>query<span class="token punctuation">(</span>Category<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>category_id <span class="token operator">==</span> Category<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">if</span> db_category <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>\n        <span class="token keyword">raise</span> HTTPException<span class="token punctuation">(</span>status_code<span class="token operator">=</span><span class="token number">404</span><span class="token punctuation">,</span> detail<span class="token operator">=</span><span class="token string">&quot;The category with the specified ID was not found&quot;</span><span class="token punctuation">)</span>\n\n    updated_data <span class="token operator">=</span> category<span class="token punctuation">.</span><span class="token builtin">dict</span><span class="token punctuation">(</span>exclude_unset<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">if</span> <span class="token string">&#39;id&#39;</span> <span class="token keyword">in</span> updated_data <span class="token keyword">and</span> updated_data<span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">]</span> <span class="token operator">!=</span> category_id<span class="token punctuation">:</span>\n        id_category <span class="token operator">=</span> db<span class="token punctuation">.</span>query<span class="token punctuation">(</span>Category<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>Category<span class="token punctuation">.</span><span class="token builtin">id</span> <span class="token operator">==</span> updated_data<span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token keyword">if</span> id_category<span class="token punctuation">:</span>\n            <span class="token keyword">raise</span> HTTPException<span class="token punctuation">(</span>status_code<span class="token operator">=</span><span class="token number">400</span><span class="token punctuation">,</span> detail<span class="token operator">=</span><span class="token string">&quot;The category with this ID already exists&quot;</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">for</span> key<span class="token punctuation">,</span> value <span class="token keyword">in</span> updated_data<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n        <span class="token builtin">setattr</span><span class="token punctuation">(</span>db_category<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>\n\n    db<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>\n    db<span class="token punctuation">.</span>refresh<span class="token punctuation">(</span>db_category<span class="token punctuation">)</span>\n    <span class="token keyword">return</span> db_category\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',16),p=[i];function o(c,l){return s(),a("div",null,p)}const r=n(e,[["render",o],["__file","index.html.vue"]]),k=JSON.parse('{"path":"/software/","title":"Реалізація інформаційного та програмного забезпечення","lang":"en-US","frontmatter":{"description":"Реалізація інформаційного та програмного забезпечення Короткий зміст Реалізація інформаційного та програмного забезпечення SQL-скрипт для створення та початкового наповнення баз...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/db-labs/software/"}],["meta",{"property":"og:site_name","content":"Система управління відкритими даними"}],["meta",{"property":"og:title","content":"Реалізація інформаційного та програмного забезпечення"}],["meta",{"property":"og:description","content":"Реалізація інформаційного та програмного забезпечення Короткий зміст Реалізація інформаційного та програмного забезпечення SQL-скрипт для створення та початкового наповнення баз..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-11-08T21:06:56.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-08T21:06:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Реалізація інформаційного та програмного забезпечення\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-08T21:06:56.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Короткий зміст","slug":"короткии-зміст","link":"#короткии-зміст","children":[]},{"level":2,"title":"SQL-скрипт для створення та початкового наповнення бази даних","slug":"sql-скрипт-для-створення-та-початкового-наповнення-бази-даних","link":"#sql-скрипт-для-створення-та-початкового-наповнення-бази-даних","children":[]},{"level":2,"title":"RESTful сервіс для управління даними","slug":"restful-сервіс-для-управління-даними","link":"#restful-сервіс-для-управління-даними","children":[]}],"git":{"createdTime":1708081508000,"updatedTime":1731100016000,"contributors":[{"name":"dk872","email":"143122117+dk872@users.noreply.github.com","commits":5},{"name":"Dmytro Zanuda","email":"dmzanuda.work@gmail.com","commits":1}]},"readingTime":{"minutes":11.49,"words":3448},"filePathRelative":"software/README.md","localizedDate":"February 16, 2024","autoDesc":true}');export{r as comp,k as data};
